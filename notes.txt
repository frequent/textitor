=> progress

> allow to createJIO inside project = support storages, find place to add params
- wrap all shortcuts in a single promise (proper queue call) with global error handler to fix propagation

=> maintain self
- try image handling with favicon, must be possible to handle images without opening
- try trailing syntax correction based on jslint/csslint for obvious cases
- try method source links, clicking on a method opens file it is contained

=> test/preview/deploy
- run tests textitor/test/, preview like gh-pages on textitor/preview/, and "build" on textitor/deploy/

=> speak
- add voice commands, try on mobile instead of using shortcuts
- juliusjs, find out how to build grammar with emscriptem online
- add voice find/grep and replace

=> gitstorage
  - replicate with indexeddb and remote gitstorage
  - createJIO = gitinit => create new repo, this method is to update git config
  - calling createJIO will only update existing git folder if there is one
  - parameters:
    * fork - url => else create empty git
    * upstream - where to send stuff, else local, must be reinitialized
    * user
    * pass
  - documents are branches, attachments are files? but caches are already files
  - post-document = create new branch
  - remove-document = delete branch
  - get-document = checkout branch
  - put - edit branch?
  - putAttachment = commit file
  - getAttachment = ?
  - removeAttachment = ?
  - repair/sync = push

=> cachestorage
  - commit will do a diff with local gitstorage, allow to init?
  - can add everything to gitstorage. push will send to master

=> github API



https://github.com/michael/github > instructions
http://rawgit.com/TristanCavelier/apps/master/app/code-editor/index.html
https://github.com/TristanCavelier/texteditor/blob/master/manifest.appcache
http://stackoverflow.com/questions/2745076/what-are-the-differences-between-git-commit-and-git-push?answertab=votes#tab-top

var github = new Github({
  username: "frequent",
  password: "",
  auth: "basic"
});
serverless = github.getRepo("frequent", "nexedi-serverless-test")
serverless.getTree("master", function (err, tree) {if (err) {console.log("error");console.log(err);} else {console.log(tree);}});

  - branches? files?
  - jio per branch? document = branch?
  - if document per branch, files are attachments, editing and saving updates attachments
  - of a diff is a new attachment?
